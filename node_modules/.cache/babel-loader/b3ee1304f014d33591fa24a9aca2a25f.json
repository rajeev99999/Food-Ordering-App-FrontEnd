{"ast":null,"code":"import _classCallCheck from \"/home/mayank/Dev/upgrad/Food-Ordering-App-FrontEnd/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/mayank/Dev/upgrad/Food-Ordering-App-FrontEnd/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/mayank/Dev/upgrad/Food-Ordering-App-FrontEnd/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/mayank/Dev/upgrad/Food-Ordering-App-FrontEnd/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/mayank/Dev/upgrad/Food-Ordering-App-FrontEnd/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/mayank/Dev/upgrad/Food-Ordering-App-FrontEnd/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _defineProperty from \"/home/mayank/Dev/upgrad/Food-Ordering-App-FrontEnd/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/mayank/Dev/upgrad/Food-Ordering-App-FrontEnd/src/common/header/Header.js\";\nimport React, { Component } from 'react'; //importing material-ui styles\n\nimport { withStyles, ThemeProvider, createMuiTheme } from '@material-ui/core/styles'; //importing material-ui components\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\nimport Button from '@material-ui/core/Button';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Modal from 'react-modal';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport PropTypes from 'prop-types';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport validator from 'validator';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Link } from 'react-router-dom'; //importing the css file of the header\n\nimport './Header.css'; //styles for the header using breakpoints to make the header responsive\n\nvar styles = function styles(theme) {\n  return {\n    grow: {\n      flexGrow: 1\n    },\n    appBar: {\n      backgroundColor: '#263238',\n      boxShadow: 'none'\n    },\n    headerTools: _defineProperty({}, theme.breakpoints.only('xs'), {\n      flexDirection: 'column',\n      alignItems: 'flex-start'\n    }),\n    logo: {\n      '&:hover': {\n        backgroundColor: 'transparent !important'\n      },\n      cursor: 'default'\n    },\n    searchBox: _defineProperty({}, theme.breakpoints.only('xs'), {\n      marginBottom: theme.spacing(1.5)\n    }),\n    inputRoot: {\n      color: 'inherit'\n    },\n    inputInput: {\n      width: '30ch'\n    },\n    headerLoginBtn: _defineProperty({}, theme.breakpoints.only('xs'), {\n      marginBottom: theme.spacing(1.5)\n    }),\n    customerProifleBtn: _defineProperty({\n      color: 'white'\n    }, theme.breakpoints.only('xs'), {\n      marginBottom: theme.spacing(1.5)\n    })\n  };\n}; // theme for changing the border bottom color of the searchbox to white when customer clicks on the serach field \n\n\nvar theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#ffffff'\n    }\n  }\n}); //custom style for modal\n\nvar customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n}; // Tab container inside the modal\n\nvar TabContainer = function TabContainer(props) {\n  return React.createElement(Typography, {\n    component: \"div\",\n    style: {\n      padding: 0,\n      textAlign: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, props.children);\n};\n\nTabContainer.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nvar Header =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Header, _Component);\n\n  function Header() {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header).call(this));\n\n    _this.openModalHandler = function () {\n      _this.setState({\n        modalIsOpen: true,\n        value: 0,\n        loginContactNoRequired: \"dispNone\",\n        loginContactNo: \"\",\n        loginPasswordRequired: \"dispNone\",\n        loginPassword: \"\",\n        loginErroMessage: \"\",\n        loginErroMessageRequired: \"dispNone\",\n        signupFirstname: \"\",\n        signupFirstnameRequired: \"dispNone\",\n        singupLastname: \"\",\n        signupEmail: \"\",\n        signupEmailRequired: \"dispNone\",\n        signupPassword: \"\",\n        signupPasswordRequired: \"dispNone\",\n        signupContactNo: \"\",\n        signupContactNoRequired: \"dispNone\",\n        signupErrorMessage: \"\",\n        signupErrorMessageRequired: \"dispNone\"\n      });\n    };\n\n    _this.closeModalHandler = function () {\n      _this.setState({\n        modalIsOpen: false\n      });\n    };\n\n    _this.tabChangeHandler = function (event, value) {\n      _this.setState({\n        value: value\n      });\n    };\n\n    _this.loginClickHandler = function () {\n      var contactNoRequired = false;\n\n      if (_this.state.loginContactNo === \"\") {\n        _this.setState({\n          loginContactNoRequired: \"dispBlock\",\n          loginContactNoRequiredMessage: \"required\"\n        });\n\n        contactNoRequired = true;\n      } else {\n        _this.setState({\n          loginContactNoRequired: \"dispNone\"\n        });\n      }\n\n      var passwordRequired = false;\n\n      if (_this.state.loginPassword === \"\") {\n        _this.setState({\n          loginPasswordRequired: \"dispBlock\",\n          loginPasswordRequiredMessage: \"required\"\n        });\n\n        passwordRequired = true;\n      } else {\n        _this.setState({\n          loginPasswordRequired: \"dispNone\"\n        });\n      }\n\n      if (contactNoRequired && passwordRequired || contactNoRequired) {\n        return;\n      } // validates the contact number\n\n\n      var isvalidContactNo = validator.isMobilePhone(_this.state.loginContactNo);\n\n      if (contactNoRequired === false && !isvalidContactNo || _this.state.loginContactNo.length !== 10) {\n        _this.setState({\n          loginContactNoRequiredMessage: \"Invalid Contact\",\n          loginContactNoRequired: \"dispBlock\"\n        });\n\n        return;\n      }\n\n      if (passwordRequired) {\n        return;\n      }\n\n      _this.sendLoginDetails();\n    };\n\n    _this.inputLoginContactNoChangeHandler = function (e) {\n      _this.setState({\n        loginContactNo: e.target.value\n      });\n    };\n\n    _this.inputLoginPasswordChangeHandler = function (e) {\n      _this.setState({\n        loginPassword: e.target.value\n      });\n    };\n\n    _this.loginSnackBarCloseHandler = function (event, reason) {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      _this.setState({\n        openLoginSnackBar: false\n      });\n    };\n\n    _this.sendLoginDetails = function () {\n      var loginData = null;\n\n      var that = _assertThisInitialized(_assertThisInitialized(_this));\n\n      var xhrLogin = new XMLHttpRequest();\n      xhrLogin.addEventListener(\"readystatechange\", function () {\n        if (this.readyState === 4) {\n          var loginResponse = JSON.parse(this.responseText); // displays the login error message\n\n          if (this.status === 401) {\n            that.setState({\n              loginErroMessage: loginResponse.message,\n              loginErroMessageRequired: \"dispBlock\"\n            });\n          } // after successful login stores uuid, access-token, first-name inside session storage and displays the login snackbar\n\n\n          if (this.status === 200) {\n            sessionStorage.setItem(\"uuid\", loginResponse.id);\n            sessionStorage.setItem(\"access-token\", xhrLogin.getResponseHeader(\"access-token\"));\n            sessionStorage.setItem(\"first-name\", loginResponse.first_name);\n            that.setState({\n              loggedIn: true,\n              openLoginSnackBar: true\n            }); //closes the modal after successful login\n\n            that.closeModalHandler();\n          }\n        }\n      });\n      var url = _this.props.baseUrl + 'customer/login';\n      xhrLogin.open(\"Post\", url);\n      xhrLogin.setRequestHeader(\"Authorization\", \"Basic \" + window.btoa(_this.state.loginContactNo + \":\" + _this.state.loginPassword));\n      xhrLogin.setRequestHeader(\"Content-Type\", \"application/json\");\n      xhrLogin.setRequestHeader(\"Cache-Control\", \"no-cache\");\n      xhrLogin.send(loginData);\n    };\n\n    _this.signupClickHandler = function () {\n      _this.state.signupFirstname === \"\" ? _this.setState({\n        signupFirstnameRequired: \"dispBlock\"\n      }) : _this.setState({\n        signupFirstnameRequired: \"dispNone\"\n      });\n      var signupEmailRequired = false;\n\n      if (_this.state.signupEmail === \"\") {\n        _this.setState({\n          signupEmailRequiredMessage: \"required\",\n          signupEmailRequired: \"dispBlock\"\n        });\n\n        signupEmailRequired = true;\n      } else {\n        _this.setState({\n          signupEmailRequired: \"dispNone\"\n        });\n      }\n\n      var signupPasswordRequired = false;\n\n      if (_this.state.signupPassword === \"\") {\n        _this.setState({\n          signupPasswordRequiredMessage: \"required\",\n          signupPasswordRequired: \"dispBlock\"\n        });\n\n        signupPasswordRequired = true;\n      } else {\n        _this.setState({\n          signupPasswordRequired: \"dispNone\"\n        });\n      }\n\n      var signupContactNoRequired = false;\n\n      if (_this.state.signupContactNo === \"\") {\n        _this.setState({\n          signupContactNoRequiredMessage: \"required\",\n          signupContactNoRequired: \"dispBlock\"\n        });\n\n        signupContactNoRequired = true;\n      } else {\n        _this.setState({\n          signupContactNoRequired: \"dispNone\"\n        });\n      } // checks the email is valid or not\n\n\n      var isValidEmail = validator.isEmail(_this.state.signupEmail);\n\n      if (signupEmailRequired === false && !isValidEmail) {\n        _this.setState({\n          signupEmailRequiredMessage: \"Invalid Email\",\n          signupEmailRequired: \"dispBlock\"\n        });\n\n        return;\n      } //check the password has  at least one capital letter, one small letter, one number, and one special character\n\n\n      var isValidPassword = new RegExp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$');\n\n      if (signupPasswordRequired === false && !isValidPassword.test(_this.state.signupPassword)) {\n        _this.setState({\n          signupPasswordRequiredMessage: \"Password must contain at least one capital letter, one small letter, one number, and one special character\",\n          signupPasswordRequired: \"dispBlock\"\n        });\n\n        return;\n      }\n\n      if (signupContactNoRequired) {\n        return;\n      } // checks the contact number is valid or not\n\n\n      var isvalidContactNo = validator.isMobilePhone(_this.state.signupContactNo);\n\n      if (signupContactNoRequired === false && !isvalidContactNo || _this.state.signupContactNo.length !== 10) {\n        _this.setState({\n          signupContactNoRequiredMessage: \"Contact No. must contain only numbers and must be 10 digits long\",\n          signupContactNoRequired: \"dispBlock\"\n        });\n\n        return;\n      }\n\n      _this.sendSignupDetails();\n    };\n\n    _this.inputSignupFirstNameChangeHandler = function (e) {\n      _this.setState({\n        signupFirstname: e.target.value\n      });\n    };\n\n    _this.inputSignupLastNameChangeHandler = function (e) {\n      _this.setState({\n        singupLastname: e.target.value\n      });\n    };\n\n    _this.inputSignupEmailChangeHandler = function (e) {\n      _this.setState({\n        signupEmail: e.target.value\n      });\n    };\n\n    _this.inputSignupPasswordChangeHandler = function (e) {\n      _this.setState({\n        signupPassword: e.target.value\n      });\n    };\n\n    _this.inputSignupContactNoChangeHandler = function (e) {\n      _this.setState({\n        signupContactNo: e.target.value\n      });\n    };\n\n    _this.clearSignupForm = function () {\n      _this.setState({\n        signupFirstname: \"\",\n        signupFirstnameRequired: \"dispNone\",\n        singupLastname: \"\",\n        signupEmail: \"\",\n        signupEmailRequired: \"dispNone\",\n        signupPassword: \"\",\n        signupPasswordRequired: \"dispNone\",\n        signupContactNo: \"\",\n        signupContactNoRequired: \"dispNone\",\n        signupErrorMessage: \"\",\n        signupErrorMessageRequired: \"dispNone\"\n      });\n    };\n\n    _this.signupSnackBarCloseHandler = function (event, reason) {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      _this.setState({\n        openSignupSnackBar: false\n      });\n    };\n\n    _this.sendSignupDetails = function () {\n      var signupData = JSON.stringify({\n        \"contact_number\": _this.state.signupContactNo,\n        \"email_address\": _this.state.signupEmail,\n        \"first_name\": _this.state.signupFirstname,\n        \"last_name\": _this.state.singupLastname,\n        \"password\": _this.state.signupPassword\n      });\n\n      var that = _assertThisInitialized(_assertThisInitialized(_this));\n\n      var xhrSignup = new XMLHttpRequest();\n      xhrSignup.addEventListener(\"readystatechange\", function () {\n        if (this.readyState === 4) {\n          var responseText = JSON.parse(this.responseText); // displays the signup error message\n\n          if (this.status === 400) {\n            that.setState({\n              signupErrorMessage: responseText.message,\n              signupErrorMessageRequired: \"dispBlock\"\n            });\n          } // after successful signup tab changes to login tab inside the modal and displays the signup snackbar\n\n\n          if (this.status === 201) {\n            that.setState({\n              value: 0,\n              openSignupSnackBar: true\n            });\n            that.clearSignupForm();\n          }\n        }\n      });\n      var url = _this.props.baseUrl + 'customer/signup';\n      xhrSignup.open(\"POST\", url);\n      xhrSignup.setRequestHeader(\"Content-Type\", \"application/json\");\n      xhrSignup.setRequestHeader(\"Cache-Control\", \"no-cache\");\n      xhrSignup.send(signupData);\n    };\n\n    _this.onProfileIconClick = function (e) {\n      _this.setState({\n        'menuState': !_this.state.menuState,\n        'anchorEl': e.currentTarget\n      });\n    };\n\n    _this.onMenuClose = function () {\n      _this.setState({\n        'menuState': !_this.state.menuState,\n        'anchorEl': null\n      });\n    };\n\n    _this.onMyProfile = function () {\n      _this.setState({\n        loggedIn: true\n      });\n    };\n\n    _this.onLogout = function () {\n      sessionStorage.removeItem('access-token');\n      sessionStorage.removeItem('uuid');\n      sessionStorage.removeItem('first-name');\n\n      _this.setState({\n        loggedIn: false\n      });\n\n      _this.onMenuClose();\n    };\n\n    _this.state = {\n      modalIsOpen: false,\n      value: 0,\n      loginContactNoRequired: \"dispNone\",\n      loginContactNo: \"\",\n      loginContactNoRequiredMessage: \"required\",\n      loginPasswordRequired: \"dispNone\",\n      loginPassword: \"\",\n      loginPasswordRequiredMessage: \"required\",\n      loggedIn: sessionStorage.getItem(\"access-token\") == null ? false : true,\n      openLoginSnackBar: false,\n      loginErroMessage: \"\",\n      loginErroMessageRequired: \"dispNone\",\n      signupFirstname: \"\",\n      signupFirstnameRequired: \"dispNone\",\n      singupLastname: \"\",\n      signupEmail: \"\",\n      signupEmailRequired: \"\",\n      signupPassword: \"\",\n      signupPasswordRequired: \"dispNone\",\n      signupContactNo: \"\",\n      signupContactNoRequired: \"dispNone\",\n      signupEmailRequiredMessage: \"required\",\n      signupPasswordRequiredMessage: \"required\",\n      signupContactNoRequiredMessage: \"required\",\n      openSignupSnackBar: false,\n      signupErrorMessage: \"\",\n      signupErrorMessageRequired: \"dispNone\",\n      menuState: false,\n      anchorEl: null\n    };\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(AppBar, {\n        position: \"static\",\n        className: classes.appBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        className: classes.headerTools,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(IconButton, {\n        disableRipple: true,\n        className: classes.logo,\n        edge: \"start\",\n        color: \"inherit\",\n        \"aria-label\": \"app logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(FastfoodIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: classes.grow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), this.props.showSearchBox ? React.createElement(\"div\", {\n        className: classes.searchBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(ThemeProvider, {\n        theme: theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"search-box-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(Input, {\n        id: \"search-box-input\",\n        startAdornment: React.createElement(InputAdornment, {\n          position: \"start\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }, React.createElement(SearchIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171\n          },\n          __self: this\n        })),\n        placeholder: \"Search by Restaurant Name\",\n        classes: {\n          root: classes.inputRoot,\n          input: classes.inputInput\n        },\n        onChange: this.props.searchHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }))) : null, React.createElement(\"div\", {\n        className: classes.grow,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }), !this.state.loggedIn ? React.createElement(\"div\", {\n        className: classes.headerLoginBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"contained\",\n        color: \"default\",\n        startIcon: React.createElement(AccountCircle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }),\n        onClick: this.openModalHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Login\")) : React.createElement(\"div\", {\n        className: classes.customerProifleBtn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(Button, {\n        id: \"customer-profile\",\n        startIcon: React.createElement(AccountCircle, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        }),\n        onClick: this.onProfileIconClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, sessionStorage.getItem(\"first-name\")), React.createElement(Menu, {\n        id: \"profile-menu\",\n        open: this.state.menuState,\n        onClose: this.onMenuClose,\n        anchorEl: this.state.anchorEl,\n        getContentAnchorEl: null,\n        anchorOrigin: {\n          vertical: \"bottom\",\n          horizontal: \"left\"\n        },\n        keepMounted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        style: {\n          minHeight: 48\n        },\n        onClick: this.onMyProfile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/profile\",\n        style: {\n          textDecoration: 'none',\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"My Profile\"))), React.createElement(MenuItem, {\n        style: {\n          minHeight: 48\n        },\n        onClick: this.onLogout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        style: {\n          textDecoration: 'none',\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Logout\"))))))), React.createElement(Modal, {\n        ariaHideApp: false,\n        isOpen: this.state.modalIsOpen,\n        contentLabel: \"Login\",\n        onRequestClose: this.closeModalHandler,\n        style: customStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Tabs, {\n        value: this.state.value,\n        className: \"tabs\",\n        onChange: this.tabChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(Tab, {\n        label: \"Login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }), React.createElement(Tab, {\n        label: \"Signup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      })), this.state.value === 0 && React.createElement(TabContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        required: true,\n        className: \"login-and-signup-forms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"contactno\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"Contact No\"), React.createElement(Input, {\n        id: \"contactno\",\n        type: \"text\",\n        value: this.state.loginContactNo,\n        contactno: this.state.loginContactNo,\n        onChange: this.inputLoginContactNoChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }), React.createElement(FormHelperText, {\n        className: this.state.loginContactNoRequired,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, this.state.loginContactNoRequiredMessage))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        required: true,\n        className: \"login-and-signup-forms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        id: \"password\",\n        type: \"password\",\n        value: this.state.loginPassword,\n        password: this.state.loginPassword,\n        onChange: this.inputLoginPasswordChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), React.createElement(FormHelperText, {\n        className: this.state.loginPasswordRequired,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, this.state.loginPasswordRequiredMessage))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"login-error-msg-div\",\n        className: this.state.loginErroMessageRequired,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"login-error-msg\",\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, this.state.loginErroMessage)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.loginClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"LOGIN\")), this.state.value === 1 && React.createElement(TabContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        required: true,\n        className: \"login-and-signup-forms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"firstname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, \"First Name\"), React.createElement(Input, {\n        id: \"firstname\",\n        type: \"text\",\n        value: this.state.signupFirstname,\n        signupfirstname: this.state.signupFirstname,\n        onChange: this.inputSignupFirstNameChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }), React.createElement(FormHelperText, {\n        className: this.state.signupFirstnameRequired,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"required\"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        className: \"login-and-signup-forms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"lastname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, \"Last Name\"), React.createElement(Input, {\n        id: \"lastname\",\n        type: \"text\",\n        value: this.state.singupLastname,\n        signuplastname: this.state.singupLastname,\n        onChange: this.inputSignupLastNameChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        required: true,\n        className: \"login-and-signup-forms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Input, {\n        id: \"email\",\n        type: \"text\",\n        value: this.state.signupEmail,\n        signupemail: this.state.signupEmail,\n        onChange: this.inputSignupEmailChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }), React.createElement(FormHelperText, {\n        className: this.state.signupEmailRequired,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, this.state.signupEmailRequiredMessage))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        required: true,\n        className: \"login-and-signup-forms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"signupPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        id: \"signupPassword\",\n        type: \"password\",\n        value: this.state.signupPassword,\n        signuppassword: this.state.signupPassword,\n        onChange: this.inputSignupPasswordChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }), React.createElement(FormHelperText, {\n        className: this.state.signupPasswordRequired,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, this.state.signupPasswordRequiredMessage))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }), React.createElement(FormControl, {\n        required: true,\n        className: \"login-and-signup-forms\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(InputLabel, {\n        htmlFor: \"signupContactNo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Contact No.\"), React.createElement(Input, {\n        id: \"signupContactNo\",\n        type: \"text\",\n        value: this.state.signupContactNo,\n        signupcontactno: this.state.signupContactNo,\n        onChange: this.inputSignupContactNoChangeHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }), React.createElement(FormHelperText, {\n        className: this.state.signupContactNoRequired,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, this.state.signupContactNoRequiredMessage))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"signup-error-msg-div\",\n        className: this.state.signupErrorMessageRequired,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        id: \"signup-error-msg\",\n        className: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, this.state.signupErrorMessage)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: this.signupClickHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, \"SIGNUP\"))), React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        open: this.state.openLoginSnackBar,\n        autoHideDuration: 10000,\n        onClose: this.loginSnackBarCloseHandler,\n        message: \"Logged in successfully!\",\n        action: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          size: \"small\",\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          onClick: this.loginSnackBarCloseHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 319\n          },\n          __self: this\n        }, React.createElement(CloseIcon, {\n          fontSize: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 321\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }), React.createElement(Snackbar, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        open: this.state.openSignupSnackBar,\n        autoHideDuration: 10000,\n        onClose: this.signupSnackBarCloseHandler,\n        message: \"Registered successfully! Please login now!\",\n        action: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 337\n          },\n          __self: this\n        }, React.createElement(IconButton, {\n          size: \"small\",\n          \"aria-label\": \"close\",\n          color: \"inherit\",\n          onClick: this.signupSnackBarCloseHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        }, React.createElement(CloseIcon, {\n          fontSize: \"small\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        }))),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }));\n    } // clears all the values and required field validation messages and error messages when modal is opened\n\n  }]);\n\n  return Header;\n}(Component);\n\nexport default withStyles(styles)(Header);","map":{"version":3,"sources":["/home/mayank/Dev/upgrad/Food-Ordering-App-FrontEnd/src/common/header/Header.js"],"names":["React","Component","withStyles","ThemeProvider","createMuiTheme","AppBar","Toolbar","IconButton","FastfoodIcon","Button","SearchIcon","AccountCircle","InputLabel","Input","InputAdornment","Modal","Tabs","Tab","Typography","FormControl","PropTypes","FormHelperText","validator","Snackbar","CloseIcon","Menu","MenuItem","Link","styles","theme","grow","flexGrow","appBar","backgroundColor","boxShadow","headerTools","breakpoints","only","flexDirection","alignItems","logo","cursor","searchBox","marginBottom","spacing","inputRoot","color","inputInput","width","headerLoginBtn","customerProifleBtn","palette","primary","main","customStyles","content","top","left","right","bottom","marginRight","transform","TabContainer","props","padding","textAlign","children","propTypes","node","isRequired","Header","openModalHandler","setState","modalIsOpen","value","loginContactNoRequired","loginContactNo","loginPasswordRequired","loginPassword","loginErroMessage","loginErroMessageRequired","signupFirstname","signupFirstnameRequired","singupLastname","signupEmail","signupEmailRequired","signupPassword","signupPasswordRequired","signupContactNo","signupContactNoRequired","signupErrorMessage","signupErrorMessageRequired","closeModalHandler","tabChangeHandler","event","loginClickHandler","contactNoRequired","state","loginContactNoRequiredMessage","passwordRequired","loginPasswordRequiredMessage","isvalidContactNo","isMobilePhone","length","sendLoginDetails","inputLoginContactNoChangeHandler","e","target","inputLoginPasswordChangeHandler","loginSnackBarCloseHandler","reason","openLoginSnackBar","loginData","that","xhrLogin","XMLHttpRequest","addEventListener","readyState","loginResponse","JSON","parse","responseText","status","message","sessionStorage","setItem","id","getResponseHeader","first_name","loggedIn","url","baseUrl","open","setRequestHeader","window","btoa","send","signupClickHandler","signupEmailRequiredMessage","signupPasswordRequiredMessage","signupContactNoRequiredMessage","isValidEmail","isEmail","isValidPassword","RegExp","test","sendSignupDetails","inputSignupFirstNameChangeHandler","inputSignupLastNameChangeHandler","inputSignupEmailChangeHandler","inputSignupPasswordChangeHandler","inputSignupContactNoChangeHandler","clearSignupForm","signupSnackBarCloseHandler","openSignupSnackBar","signupData","stringify","xhrSignup","onProfileIconClick","menuState","currentTarget","onMenuClose","onMyProfile","onLogout","removeItem","getItem","anchorEl","classes","showSearchBox","root","input","searchHandler","vertical","horizontal","minHeight","textDecoration"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\n//importing material-ui styles\nimport {withStyles, ThemeProvider, createMuiTheme} from '@material-ui/core/styles';\n\n//importing material-ui components\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport FastfoodIcon from '@material-ui/icons/Fastfood';\nimport Button from '@material-ui/core/Button';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport Modal from 'react-modal';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport PropTypes from 'prop-types';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport validator from 'validator';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {Link} from 'react-router-dom';\n\n//importing the css file of the header\nimport './Header.css';\n\n//styles for the header using breakpoints to make the header responsive\nconst styles = theme => ({\n    grow: {\n        flexGrow: 1,\n    },\n    appBar: {\n        backgroundColor: '#263238',\n        boxShadow: 'none',\n    },\n    headerTools: {\n        [theme.breakpoints.only('xs')]: {\n            flexDirection: 'column',\n            alignItems: 'flex-start',\n        },\n    },\n    logo: {\n        '&:hover': {\n            backgroundColor: 'transparent !important',\n        },\n        cursor: 'default',\n    },\n    searchBox: {\n        [theme.breakpoints.only('xs')]: {\n            marginBottom: theme.spacing(1.5),\n        },\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        width: '30ch',\n    },\n    headerLoginBtn: {\n        [theme.breakpoints.only('xs')]: {\n            marginBottom: theme.spacing(1.5),\n        },\n    },\n    customerProifleBtn: {\n        color: 'white',\n        [theme.breakpoints.only('xs')]: {\n            marginBottom: theme.spacing(1.5),\n        },\n    },\n});\n\n// theme for changing the border bottom color of the searchbox to white when customer clicks on the serach field \nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#ffffff',\n        }\n    }\n});\n\n//custom style for modal\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)'\n    }\n};\n\n// Tab container inside the modal\nconst TabContainer = function (props) {\n    return (\n        <Typography component=\"div\" style={{padding: 0, textAlign: 'center'}}>\n            {props.children}\n        </Typography>\n    )\n}\n\nTabContainer.propTypes = {\n    children: PropTypes.node.isRequired\n}\n\nclass Header extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            modalIsOpen: false,\n            value: 0,\n            loginContactNoRequired: \"dispNone\",\n            loginContactNo: \"\",\n            loginContactNoRequiredMessage: \"required\",\n            loginPasswordRequired: \"dispNone\",\n            loginPassword: \"\",\n            loginPasswordRequiredMessage: \"required\",\n            loggedIn: sessionStorage.getItem(\"access-token\") == null ? false : true,\n            openLoginSnackBar: false,\n            loginErroMessage: \"\",\n            loginErroMessageRequired: \"dispNone\",\n            signupFirstname: \"\",\n            signupFirstnameRequired: \"dispNone\",\n            singupLastname: \"\",\n            signupEmail: \"\",\n            signupEmailRequired: \"\",\n            signupPassword: \"\",\n            signupPasswordRequired: \"dispNone\",\n            signupContactNo: \"\",\n            signupContactNoRequired: \"dispNone\",\n            signupEmailRequiredMessage: \"required\",\n            signupPasswordRequiredMessage: \"required\",\n            signupContactNoRequiredMessage: \"required\",\n            openSignupSnackBar: false,\n            signupErrorMessage: \"\",\n            signupErrorMessageRequired: \"dispNone\",\n            menuState: false,\n            anchorEl: null,\n        }\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <div>\n                <AppBar position=\"static\" className={classes.appBar}>\n                    {/* Toolbar that contains app logo, searchbox and login button */}\n                    <Toolbar className={classes.headerTools}>\n                        {/* app logo inside iconButton*/}\n                        <IconButton disableRipple={true} className={classes.logo} edge=\"start\" color=\"inherit\"\n                                    aria-label=\"app logo\">\n                            <FastfoodIcon/>\n                        </IconButton>\n                        <div className={classes.grow}/>\n                        {/* searchbox will be displayed only if needed */}\n                        {this.props.showSearchBox ?\n                            <div className={classes.searchBox}>\n                                <ThemeProvider theme={theme}>\n                                    <InputLabel htmlFor=\"search-box-input\"/>\n                                    <Input id=\"search-box-input\"\n                                           startAdornment={\n                                               <InputAdornment position=\"start\">\n                                                   <SearchIcon/>\n                                               </InputAdornment>\n                                           }\n                                           placeholder=\"Search by Restaurant Name\"\n                                           classes={{\n                                               root: classes.inputRoot,\n                                               input: classes.inputInput,\n                                           }}\n                                           onChange={this.props.searchHandler}\n                                    />\n                                </ThemeProvider>\n                            </div>\n                            : null\n                        }\n                        <div className={classes.grow}/>\n                        {/* If customer is not logged in then it displays login button otherwise displays the customer's firstname */}\n                        {!this.state.loggedIn ?\n                            <div className={classes.headerLoginBtn}>\n                                <Button variant=\"contained\" color=\"default\" startIcon={<AccountCircle/>}\n                                        onClick={this.openModalHandler}>Login</Button>\n                            </div>\n                            :\n                            <div className={classes.customerProifleBtn}>\n                                <Button id=\"customer-profile\" startIcon={<AccountCircle/>}\n                                        onClick={this.onProfileIconClick}>{sessionStorage.getItem(\"first-name\")}</Button>\n                                <Menu id=\"profile-menu\" open={this.state.menuState} onClose={this.onMenuClose}\n                                      anchorEl={this.state.anchorEl} getContentAnchorEl={null}\n                                      anchorOrigin={{vertical: \"bottom\", horizontal: \"left\"}} keepMounted>\n                                    <MenuItem style={{minHeight: 48}} onClick={this.onMyProfile}><Typography><Link\n                                        to={\"/profile\"} style={{textDecoration: 'none', color: 'black'}}>My\n                                        Profile</Link></Typography></MenuItem>\n                                    <MenuItem style={{minHeight: 48}} onClick={this.onLogout}><Link to={\"/\"} style={{\n                                        textDecoration: 'none',\n                                        color: 'black'\n                                    }}><Typography>Logout</Typography></Link></MenuItem>\n                                </Menu>\n                            </div>\n                        }\n                    </Toolbar>\n                </AppBar>\n                {/* displays login modal if customer clicks on the login button, modal contains two tabs one for login and one for signup */}\n                <Modal\n                    ariaHideApp={false}\n                    isOpen={this.state.modalIsOpen}\n                    contentLabel=\"Login\"\n                    onRequestClose={this.closeModalHandler}\n                    style={customStyles}>\n                    <Tabs value={this.state.value} className=\"tabs\" onChange={this.tabChangeHandler}>\n                        <Tab label=\"Login\"/>\n                        <Tab label=\"Signup\"/>\n                    </Tabs>\n                    {/* If value is 0 then displays the first tab of the modal */}\n                    {this.state.value === 0 &&\n                    <TabContainer>\n                        {/* login form with contact no and password input fields */}\n                        <FormControl required className=\"login-and-signup-forms\">\n                            <InputLabel htmlFor=\"contactno\">Contact No</InputLabel>\n                            <Input id=\"contactno\" type=\"text\" value={this.state.loginContactNo}\n                                   contactno={this.state.loginContactNo}\n                                   onChange={this.inputLoginContactNoChangeHandler}/>\n                            <FormHelperText className={this.state.loginContactNoRequired}>\n                                <span className=\"red\">{this.state.loginContactNoRequiredMessage}</span>\n                            </FormHelperText>\n                        </FormControl>\n                        <br/><br/>\n                        <FormControl required className=\"login-and-signup-forms\">\n                            <InputLabel htmlFor=\"password\">Password</InputLabel>\n                            <Input id=\"password\" type=\"password\" value={this.state.loginPassword}\n                                   password={this.state.loginPassword} onChange={this.inputLoginPasswordChangeHandler}/>\n                            <FormHelperText className={this.state.loginPasswordRequired}>\n                                <span className=\"red\">{this.state.loginPasswordRequiredMessage}</span>\n                            </FormHelperText>\n                        </FormControl>\n                        <br/><br/>\n                        <div id=\"login-error-msg-div\" className={this.state.loginErroMessageRequired}><span\n                            id=\"login-error-msg\" className=\"red\">{this.state.loginErroMessage}</span></div>\n                        <br/>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.loginClickHandler}>LOGIN</Button>\n                    </TabContainer>\n                    }\n                    {this.state.value === 1 &&\n                    <TabContainer>\n                        {/* signup form contains firstname, lastname, email, password and contact no input fields */}\n                        <FormControl required className=\"login-and-signup-forms\">\n                            <InputLabel htmlFor=\"firstname\">First Name</InputLabel>\n                            <Input id=\"firstname\" type=\"text\" value={this.state.signupFirstname}\n                                   signupfirstname={this.state.signupFirstname}\n                                   onChange={this.inputSignupFirstNameChangeHandler}/>\n                            <FormHelperText className={this.state.signupFirstnameRequired}>\n                                <span className=\"red\">required</span>\n                            </FormHelperText>\n                        </FormControl>\n                        <br/><br/>\n                        <FormControl className=\"login-and-signup-forms\">\n                            <InputLabel htmlFor=\"lastname\">Last Name</InputLabel>\n                            <Input id=\"lastname\" type=\"text\" value={this.state.singupLastname}\n                                   signuplastname={this.state.singupLastname}\n                                   onChange={this.inputSignupLastNameChangeHandler}/>\n                        </FormControl>\n                        <br/><br/>\n                        <FormControl required className=\"login-and-signup-forms\">\n                            <InputLabel htmlFor=\"email\">Email</InputLabel>\n                            <Input id=\"email\" type=\"text\" value={this.state.signupEmail}\n                                   signupemail={this.state.signupEmail} onChange={this.inputSignupEmailChangeHandler}/>\n                            <FormHelperText className={this.state.signupEmailRequired}>\n                                <span className=\"red\">{this.state.signupEmailRequiredMessage}</span>\n                            </FormHelperText>\n                        </FormControl>\n                        <br/><br/>\n                        <FormControl required className=\"login-and-signup-forms\">\n                            <InputLabel htmlFor=\"signupPassword\">Password</InputLabel>\n                            <Input id=\"signupPassword\" type=\"password\" value={this.state.signupPassword}\n                                   signuppassword={this.state.signupPassword}\n                                   onChange={this.inputSignupPasswordChangeHandler}/>\n                            <FormHelperText className={this.state.signupPasswordRequired}>\n                                <span className=\"red\">{this.state.signupPasswordRequiredMessage}</span>\n                            </FormHelperText>\n                        </FormControl>\n                        <br/><br/>\n                        <FormControl required className=\"login-and-signup-forms\">\n                            <InputLabel htmlFor=\"signupContactNo\">Contact No.</InputLabel>\n                            <Input id=\"signupContactNo\" type=\"text\" value={this.state.signupContactNo}\n                                   signupcontactno={this.state.signupContactNo}\n                                   onChange={this.inputSignupContactNoChangeHandler}/>\n                            <FormHelperText className={this.state.signupContactNoRequired}>\n                                <span className=\"red\">{this.state.signupContactNoRequiredMessage}</span>\n                            </FormHelperText>\n                        </FormControl>\n                        <br/><br/>\n                        <div id=\"signup-error-msg-div\" className={this.state.signupErrorMessageRequired}><span\n                            id=\"signup-error-msg\" className=\"red\">{this.state.signupErrorMessage}</span></div>\n                        <br/>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.signupClickHandler}>SIGNUP</Button>\n                    </TabContainer>\n                    }\n                </Modal>\n                {/* login snackbar to display the message if customer login is successful  */}\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    open={this.state.openLoginSnackBar}\n                    autoHideDuration={10000}\n                    onClose={this.loginSnackBarCloseHandler}\n                    message=\"Logged in successfully!\"\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\"\n                                        onClick={this.loginSnackBarCloseHandler}>\n                                <CloseIcon fontSize=\"small\"/>\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n                {/* signup snackbar to display the message if customer registered successfully  */}\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    open={this.state.openSignupSnackBar}\n                    autoHideDuration={10000}\n                    onClose={this.signupSnackBarCloseHandler}\n                    message=\"Registered successfully! Please login now!\"\n                    action={\n                        <React.Fragment>\n                            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\"\n                                        onClick={this.signupSnackBarCloseHandler}>\n                                <CloseIcon fontSize=\"small\"/>\n                            </IconButton>\n                        </React.Fragment>\n                    }\n                />\n            </div>\n        );\n    }\n\n    // clears all the values and required field validation messages and error messages when modal is opened\n    openModalHandler = () => {\n        this.setState({\n            modalIsOpen: true,\n            value: 0,\n            loginContactNoRequired: \"dispNone\",\n            loginContactNo: \"\",\n            loginPasswordRequired: \"dispNone\",\n            loginPassword: \"\",\n            loginErroMessage: \"\",\n            loginErroMessageRequired: \"dispNone\",\n            signupFirstname: \"\",\n            signupFirstnameRequired: \"dispNone\",\n            singupLastname: \"\",\n            signupEmail: \"\",\n            signupEmailRequired: \"dispNone\",\n            signupPassword: \"\",\n            signupPasswordRequired: \"dispNone\",\n            signupContactNo: \"\",\n            signupContactNoRequired: \"dispNone\",\n            signupErrorMessage: \"\",\n            signupErrorMessageRequired: \"dispNone\",\n        });\n    }\n\n    // closes the modal\n    closeModalHandler = () => {\n        this.setState({modalIsOpen: false});\n    }\n\n    // changes the tabs inside modal\n    tabChangeHandler = (event, value) => {\n        this.setState({value});\n    }\n\n    /* when customer click's on login button then below function will be called \n    performs field validation and displays login error message if cutomer tries to login with invalid credentials or \n    contact no is not registered */\n    loginClickHandler = () => {\n\n        let contactNoRequired = false;\n        if (this.state.loginContactNo === \"\") {\n            this.setState({\n                loginContactNoRequired: \"dispBlock\",\n                loginContactNoRequiredMessage: \"required\"\n            });\n            contactNoRequired = true;\n        } else {\n            this.setState({\n                loginContactNoRequired: \"dispNone\"\n            });\n        }\n\n        let passwordRequired = false;\n        if (this.state.loginPassword === \"\") {\n            this.setState({\n                loginPasswordRequired: \"dispBlock\",\n                loginPasswordRequiredMessage: \"required\"\n            });\n            passwordRequired = true;\n        } else {\n            this.setState({\n                loginPasswordRequired: \"dispNone\"\n            });\n        }\n\n        if ((contactNoRequired && passwordRequired) || contactNoRequired) {\n            return;\n        }\n\n        // validates the contact number\n        const isvalidContactNo = validator.isMobilePhone(this.state.loginContactNo);\n        if ((contactNoRequired === false && !isvalidContactNo) || this.state.loginContactNo.length !== 10) {\n            this.setState({\n                loginContactNoRequiredMessage: \"Invalid Contact\",\n                loginContactNoRequired: \"dispBlock\"\n            });\n            return;\n        }\n\n        if (passwordRequired) {\n            return;\n        }\n        this.sendLoginDetails();\n    }\n\n    // calls when value of the contact no field changes in login form\n    inputLoginContactNoChangeHandler = (e) => {\n        this.setState({loginContactNo: e.target.value});\n    }\n\n    // calls when value of the password field changes in login form\n    inputLoginPasswordChangeHandler = (e) => {\n        this.setState({loginPassword: e.target.value});\n    }\n\n    //closes the login snackbar\n    loginSnackBarCloseHandler = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            openLoginSnackBar: false\n        });\n    }\n\n    // Integrating login functionality with backend\n    sendLoginDetails = () => {\n        let loginData = null;\n        let that = this;\n        let xhrLogin = new XMLHttpRequest();\n        xhrLogin.addEventListener(\"readystatechange\", function () {\n            if (this.readyState === 4) {\n                let loginResponse = JSON.parse(this.responseText);\n                // displays the login error message\n                if (this.status === 401) {\n                    that.setState({\n                        loginErroMessage: loginResponse.message,\n                        loginErroMessageRequired: \"dispBlock\"\n                    });\n                }\n                // after successful login stores uuid, access-token, first-name inside session storage and displays the login snackbar\n                if (this.status === 200) {\n                    sessionStorage.setItem(\"uuid\", loginResponse.id);\n                    sessionStorage.setItem(\"access-token\", xhrLogin.getResponseHeader(\"access-token\"));\n                    sessionStorage.setItem(\"first-name\", loginResponse.first_name)\n                    that.setState({\n                        loggedIn: true,\n                        openLoginSnackBar: true\n                    });\n                    //closes the modal after successful login\n                    that.closeModalHandler();\n                }\n            }\n        });\n        let url = this.props.baseUrl + 'customer/login';\n        xhrLogin.open(\"Post\", url);\n        xhrLogin.setRequestHeader(\"Authorization\", \"Basic \" + window.btoa(this.state.loginContactNo + \":\" + this.state.loginPassword));\n        xhrLogin.setRequestHeader(\"Content-Type\", \"application/json\");\n        xhrLogin.setRequestHeader(\"Cache-Control\", \"no-cache\");\n        xhrLogin.send(loginData);\n    }\n\n    // signup form validation \n    signupClickHandler = () => {\n\n        this.state.signupFirstname === \"\" ? this.setState({signupFirstnameRequired: \"dispBlock\"}) : this.setState({signupFirstnameRequired: \"dispNone\"});\n\n        let signupEmailRequired = false;\n        if (this.state.signupEmail === \"\") {\n            this.setState({\n                signupEmailRequiredMessage: \"required\",\n                signupEmailRequired: \"dispBlock\"\n            });\n            signupEmailRequired = true;\n        } else {\n            this.setState({signupEmailRequired: \"dispNone\"});\n        }\n\n        let signupPasswordRequired = false;\n        if (this.state.signupPassword === \"\") {\n            this.setState({\n                signupPasswordRequiredMessage: \"required\",\n                signupPasswordRequired: \"dispBlock\"\n            });\n            signupPasswordRequired = true;\n        } else {\n            this.setState({signupPasswordRequired: \"dispNone\"});\n        }\n\n        let signupContactNoRequired = false;\n        if (this.state.signupContactNo === \"\") {\n            this.setState({\n                signupContactNoRequiredMessage: \"required\",\n                signupContactNoRequired: \"dispBlock\"\n            });\n            signupContactNoRequired = true;\n        } else {\n            this.setState({signupContactNoRequired: \"dispNone\"});\n        }\n\n        // checks the email is valid or not\n        const isValidEmail = validator.isEmail(this.state.signupEmail);\n        if (signupEmailRequired === false && !isValidEmail) {\n            this.setState({\n                signupEmailRequiredMessage: \"Invalid Email\",\n                signupEmailRequired: \"dispBlock\"\n            });\n            return;\n        }\n\n        //check the password has  at least one capital letter, one small letter, one number, and one special character\n        const isValidPassword = new RegExp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$');\n        if (signupPasswordRequired === false && !isValidPassword.test(this.state.signupPassword)) {\n            this.setState({\n                signupPasswordRequiredMessage: \"Password must contain at least one capital letter, one small letter, one number, and one special character\",\n                signupPasswordRequired: \"dispBlock\"\n            });\n            return;\n        }\n\n        if (signupContactNoRequired) {\n            return;\n        }\n\n        // checks the contact number is valid or not\n        const isvalidContactNo = validator.isMobilePhone(this.state.signupContactNo);\n        if ((signupContactNoRequired === false && !isvalidContactNo) || this.state.signupContactNo.length !== 10) {\n            this.setState({\n                signupContactNoRequiredMessage: \"Contact No. must contain only numbers and must be 10 digits long\",\n                signupContactNoRequired: \"dispBlock\"\n            });\n            return;\n        }\n\n        this.sendSignupDetails();\n    }\n\n    // calls when value of the firstname field changes in signup form\n    inputSignupFirstNameChangeHandler = (e) => {\n        this.setState({signupFirstname: e.target.value});\n    }\n\n    // calls when value of the lastname field changes in signup form\n    inputSignupLastNameChangeHandler = (e) => {\n        this.setState({singupLastname: e.target.value});\n    }\n\n    // calls when value of the email field changes in signup form\n    inputSignupEmailChangeHandler = (e) => {\n        this.setState({signupEmail: e.target.value});\n    }\n\n    // calls when value of the password field changes in signup form\n    inputSignupPasswordChangeHandler = (e) => {\n        this.setState({signupPassword: e.target.value});\n    }\n\n    // calls when value of the contact no field changes in signup form\n    inputSignupContactNoChangeHandler = (e) => {\n        this.setState({signupContactNo: e.target.value});\n    }\n\n    // clears the signup form after successful signup\n    clearSignupForm = () => {\n        this.setState({\n            signupFirstname: \"\",\n            signupFirstnameRequired: \"dispNone\",\n            singupLastname: \"\",\n            signupEmail: \"\",\n            signupEmailRequired: \"dispNone\",\n            signupPassword: \"\",\n            signupPasswordRequired: \"dispNone\",\n            signupContactNo: \"\",\n            signupContactNoRequired: \"dispNone\",\n            signupErrorMessage: \"\",\n            signupErrorMessageRequired: \"dispNone\",\n        });\n    }\n\n    // closes the signup snackbar\n    signupSnackBarCloseHandler = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        this.setState({\n            openSignupSnackBar: false\n        });\n    }\n\n    // Integrating signup functionality with backend\n    sendSignupDetails = () => {\n        let signupData = JSON.stringify({\n            \"contact_number\": this.state.signupContactNo,\n            \"email_address\": this.state.signupEmail,\n            \"first_name\": this.state.signupFirstname,\n            \"last_name\": this.state.singupLastname,\n            \"password\": this.state.signupPassword\n        });\n\n        let that = this;\n        let xhrSignup = new XMLHttpRequest();\n        xhrSignup.addEventListener(\"readystatechange\", function () {\n            if (this.readyState === 4) {\n                let responseText = JSON.parse(this.responseText);\n                // displays the signup error message\n                if (this.status === 400) {\n                    that.setState({\n                        signupErrorMessage: responseText.message,\n                        signupErrorMessageRequired: \"dispBlock\"\n                    });\n                }\n                // after successful signup tab changes to login tab inside the modal and displays the signup snackbar\n                if (this.status === 201) {\n                    that.setState({\n                        value: 0,\n                        openSignupSnackBar: true\n                    });\n                    that.clearSignupForm();\n                }\n            }\n        });\n        let url = this.props.baseUrl + 'customer/signup'\n        xhrSignup.open(\"POST\", url);\n        xhrSignup.setRequestHeader(\"Content-Type\", \"application/json\");\n        xhrSignup.setRequestHeader(\"Cache-Control\", \"no-cache\");\n        xhrSignup.send(signupData);\n    }\n\n    // called when customer clicks on profile icon\n    onProfileIconClick = (e) => {\n        this.setState({'menuState': !this.state.menuState, 'anchorEl': e.currentTarget});\n    }\n\n    // closes the menu\n    onMenuClose = () => {\n        this.setState({'menuState': !this.state.menuState, 'anchorEl': null});\n    }\n\n    // redirects to profile page when customer clicks on My Profile inside the menu\n    onMyProfile = () => {\n        this.setState({\n            loggedIn: true\n        });\n    }\n\n    // when customer clicks on logout inside the menu remove's access-token, uuid, first-name from sessionStorage and redirects to home page and closes the menu\n    onLogout = () => {\n        sessionStorage.removeItem('access-token');\n        sessionStorage.removeItem('uuid');\n        sessionStorage.removeItem('first-name');\n        this.setState({\n            loggedIn: false\n        })\n        this.onMenuClose();\n    }\n\n}\n\nexport default withStyles(styles)(Header);\n"]},"metadata":{},"sourceType":"module"}